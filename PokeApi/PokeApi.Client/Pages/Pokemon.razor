
@rendermode InteractiveAuto

@* Importamos los modelos y servicios compartidos y inyectamos la interfaz*@
@using PokeApi.Shared.Models
@using PokeApi.Shared.Services
@inject IPokeApiServiceShared PokeApiService


@* Verificamos si se encontró algún pokemón*@

@if (pokemon == null)
{
    <p>Selecciona un Pokémon</p>
}
// Si se encontró un pokemón, se muestra la información
else
{

    <div class="pokemon-card">

        @* Se muestra la imagen del pokemón si existe *@
        @if (!string.IsNullOrEmpty(ImgPokemon))
        {
            <img src="@ImgPokemon" alt="@pokemon.Name" />
        }

        @* Se muestra el nombre del pokemón si existe *@
        @if (!string.IsNullOrEmpty(pokemon.Name))
        {
            <h2>@pokemon.Name.ToUpper()</h2>
        }

        <div class="types">
            @foreach (var type in pokemon.Types)
            {
                <span class="type-badge">@type.Type.Name.ToUpper()</span>
            }
        </div>

        @* Se muestran las habilidades del pokemon *@

        <h1>Habilidades</h1>

        <div class="abilities">

            @foreach (var ability in pokemon.Abilities)
            {
                <span class="type-badge">@ability.Ability.Name.ToUpper()</span>
                <br />
            }
        </div>

    </div>
}

@code {

    [Parameter]
    public string Name { get; set; } = string.Empty;
    private PokemonCharacteristics? pokemon;
    private string? ImgPokemon;

    //OnParametersSetAsync para detectar cambios en el parámetro
    protected override async Task OnParametersSetAsync()
    {
        if (string.IsNullOrWhiteSpace(Name))
        {
            pokemon = null;
            return;
        }

        try
        {
            pokemon = await PokeApiService.GetPokemonByNameAsync(Name);

            if (pokemon != null && !string.IsNullOrEmpty(pokemon.Name))
            {
                ImgPokemon = $"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/{pokemon.Id}.png";
            }
            else
            {
                pokemon = null;
            }
        }
        catch
        { 
            Console.WriteLine($"Error al obtener el pokemón");
            pokemon = null;
        }
    }
}